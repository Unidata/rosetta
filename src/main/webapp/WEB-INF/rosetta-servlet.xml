<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	       http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	       http://www.springframework.org/schema/context 
         http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- Activates various annotations to be detected in bean classes -->
    <context:annotation-config/>

    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:component-scan base-package="edu.ucar.unidata.rosetta"/>

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- RosettaProperties injection -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          id="applicationProperties">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>

    <!-- Static resources since we are handling all requests.
         These are front end resources (css, etc.) and xml files -->
    <mvc:resources location="/frontEndResources/, /WEB-INF/classes/resources/"
                   mapping="/resources/**"/>
    <mvc:resources location="file:#{systemProperties['rosetta.content.root.path']}/user_files/"
                   mapping="/download/**"/>
    <mvc:resources location="/batch/"
                   mapping="/batch/**"/>


    <!-- Taming the pesky derby.log file -->

    <bean id="setDerbyLog" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass"><value>java.lang.System</value></property>
        <property name="targetMethod"><value>setProperty</value></property>
        <property name="arguments">
            <list>
                <value>derby.stream.error.file</value>
                <value>${catalina.home}/logs/derby.log</value>
            </list>
        </property>
    </bean>


    <!-- File upload multipart resolver -->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          id="multipartResolver">
        <property name="maxUploadSize" value="${rosetta.maxUpload}"/>
    </bean>

    <!-- Map exceptions to the proper views -->

    <bean class="edu.ucar.unidata.rosetta.exceptions.RosettaMappingExceptionResolver">
        <property name="defaultErrorView" value="error"/>
    </bean>


    <!-- Message source resolver to use messages.properties file in the 'war/WEB-INF/classes' directory -->
    <bean class="org.springframework.context.support.ResourceBundleMessageSource"
          id="messageSource">
        <property name="basename" value="messages"/>
    </bean>

    <!-- Resolves view names to decouple view from controller: ModelAndView("WEB-INF/views/XXXX.jsp"); -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="viewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- Declaration for resource use -->
    <bean class="edu.ucar.unidata.rosetta.service.batch.BatchFileManagerImpl" id="batchFileManager"/>
    <bean class="edu.ucar.unidata.rosetta.service.wizard.FileManagerImpl" id="fileManager"/>
    <bean class="edu.ucar.unidata.rosetta.service.validators.wizard.FileValidator"
          id="fileValidator"/>
    <bean class="edu.ucar.unidata.rosetta.service.ServerInfoBean" id="serverInfo"
          init-method="init"/>
    <bean class="edu.ucar.unidata.rosetta.init.resources.EmbeddedDerbyDbInitManager"
          id="dbInitManager"/>

    <!-- Data Access Object (DAO) injection into resource-related service-layer classes. -->
    <bean class="edu.ucar.unidata.rosetta.service.ResourceManagerImpl" id="resourceManager">
        <property name="cfTypeResourceDao" ref="cfTypeResourceDao"/>
        <property name="communityResourceDao" ref="communityResourceDao"/>
        <property name="delimiterResourceDao" ref="delimiterResourceDao"/>
        <property name="fileTypeResourceDao" ref="fileTypeResourceDao"/>
        <property name="metadataProfileResourceDao" ref="metadataProfileResourceDao"/>
        <property name="platformResourceDao" ref="platformResourceDao"/>
    </bean>

    <!-- Data Access Object (DAO) injection into wizard-related service-layer classes. -->
    <bean class="edu.ucar.unidata.rosetta.service.wizard.WizardManagerImpl"
          id="wizardManager">
        <property name="delimiterResourceDao" ref="delimiterResourceDao"/>
        <property name="globalMetadataDao" ref="globalMetadataDao"/>
        <property name="uploadedFileDao" ref="uploadedFileDao"/>
        <property name="variableDao" ref="variableDao"/>
        <property name="wizardDataDao" ref="wizardDataDao"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.service.wizard.TemplateManagerImpl" id="templateManager">
        <property name="variableDao" ref="variableDao"/>
        <property name="globalMetadataDao" ref="globalMetadataDao"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.service.wizard.MetadataManagerImpl" id="metadataManager">
        <property name="metadataProfileDao" ref="metadataProfileDao"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.service.wizard.UploadedFileManagerImpl"
          id="uploadedFileManager">
        <property name="globalMetadataDao" ref="globalMetadataDao"/>
        <property name="uploadedFileDao" ref="uploadedFileDao"/>
        <property name="variableDao" ref="variableDao"/>
        <property name="wizardDataDao" ref="wizardDataDao"/>
    </bean>


    <!-- Data Access Object (DAO) injection into utility-layer classes. -->
    <bean class="edu.ucar.unidata.rosetta.util.PropertyUtils" id="propertyUtils">
        <property name="propertiesDao" ref="propertiesDao"/>
    </bean>

    <!-- Properties datasource injection. (Property data is provided from the application.properties
    file during startup and persisted in the database for quick access/use.) -->
    <bean class="edu.ucar.unidata.rosetta.repository.JdbcPropertiesDao" id="propertiesDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <!-- Resource datasource injection. (Resources are data taken from WEB-INF/classes/resources/*.xml
    files and added to the database for quick access.  The resource data is access frequently in the
    Rosetta app and therefore it is more efficient to make a database call than to crack open and
    parse an XML file every time we need to access this data.) -->
    <bean class="edu.ucar.unidata.rosetta.repository.resources.JdbcCfTypeResourceDao"
          id="cfTypeResourceDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.resources.JdbcCommunityResourceDao"
          id="communityResourceDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.resources.JdbcDelimiterResourceDao"
          id="delimiterResourceDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.resources.JdbcFileTypeResourceDao"
          id="fileTypeResourceDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.resources.JdbcMetadataProfileResourceDao"
          id="metadataProfileResourceDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.resources.JdbcPlatformResourceDao"
          id="platformResourceDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <!-- Wizard datasource injection. Wizard-related classes need to access to persisted data. -->
    <bean class="edu.ucar.unidata.rosetta.repository.wizard.JdbcGlobalMetadataDao" id="globalMetadataDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.wizard.JdbcMetadataProfileDao" id="metadataProfileDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.wizard.JdbcWizardDataDao" id="wizardDataDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.wizard.JdbcVariableDao" id="variableDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <bean class="edu.ucar.unidata.rosetta.repository.wizard.JdbcUploadedFileDao"
          id="uploadedFileDao">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>

    <!-- Using a database for persistence.  Declare a datasource that has pooling capabilities-->
    <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dbDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url"
                  value="${jdbc.url}#{systemProperties['rosetta.content.root.path']}/${jdbc.dbName}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="10"/>
        <property name="maxActive" value="20"/>
        <property name="maxIdle" value="-1"/>
        <property name="maxWait" value="-1"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
    </bean>

</beans>
